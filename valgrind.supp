# 
# Suppress false-positive leaks in libgobject
#
{
   ignore_libgobject_class_ref
   Memcheck:Leak
   ...
   obj:*/*libgobject*.so*
   fun:g_type_class_ref
}
{
   ignore_libgobject_g_type_reg_fundamental
   Memcheck:Leak
   ...
   obj:*/*libgobject*.so*
   fun:g_type_register_fundamental
}

{
   ignore_libgobject_g_type_reg_static
   Memcheck:Leak
   match-leak-kinds: possible
   ...
   obj:*/*libgobject*.so*
   fun:g_type_register_static
}

{
   ignore_libgobject_call_init
   Memcheck:Leak
   match-leak-kinds: possible
   ...
   obj:*/*libgobject*.so*
   fun:call_init.part.0
}

{
   ignore_libgobject_g_param_spec
   Memcheck:Leak
   match-leak-kinds: possible
   ...
   obj:*/*libgobject*.so*
   fun:g_param_spec_uint64
}

{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:g_malloc0
   obj:/usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.5600.4
   obj:/usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.5600.4
   obj:/usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.5600.4
   fun:call_init
   fun:_dl_init
   obj:/lib/x86_64-linux-gnu/ld-2.27.so
}
